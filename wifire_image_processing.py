# -*- coding: utf-8 -*-
"""Wifire_image_processing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T4O7i5wT9V_FIAGMYwwAKCdrwmo5CuLp
"""

#Step 1 part 1: connect to drive
!apt-get install -y -qq software-properties-common python-software-properties module-init-tools
!add-apt-repository -y ppa:alessandro-strada/ppa 2>&1 > /dev/null
!apt-get update -qq 2>&1 > /dev/null
!apt-get -y install -qq google-drive-ocamlfuse fuse
from google.colab import auth
auth.authenticate_user()
from oauth2client.client import GoogleCredentials
creds = GoogleCredentials.get_application_default()
import getpass
!google-drive-ocamlfuse -headless -id={creds.client_id} -secret={creds.client_secret} < /dev/null 2>&1 | grep URL
vcode = getpass.getpass()
!echo {vcode} | google-drive-ocamlfuse -headless -id={creds.client_id} -secret={creds.client_secret}

!mkdir -p drive
!google-drive-ocamlfuse drive

import sys
sys.path.append('drive/ml_workshop')

import numpy as np
import scipy.misc
from scipy import misc
import matplotlib.pyplot as plt

from skimage import data
photo_data = misc.imread('drive/WIFIRE_TEST/wifire/sd-3layers.jpg')
type(photo_data)

"""Let's show the image here."""

plt.figure(figsize=(15,15))
plt.imshow(photo_data)

"""Now we are going to print the details about this image."""

print(photo_data.shape)

"""Here first data shows the height of the image, second one is for width and the last one is for the layers(RGB).

Let's print the photo_data size
"""

print(photo_data.size)

"""Now this function will provide the information of the minimum and maximum pixel of this image"""

print(photo_data.min())
print(photo_data.max())

"""The **Mean** of all pixel values."""

photo_data.mean()

"""Pixel on the 150th Row and 250th Column"""

photo_data[150,250]

"""If we want to know the value of red in the [150,250]th pixel :"""

photo_data[150,250,0]

"""Now we are going to put the value of the pixel [150,250] to 0. Though this change is not noticable."""

photo_data[150,250] = [0,0,0]
plt.figure(figsize=(5,5))
plt.imshow(photo_data)

"""Now we'll try to change the colour of the pixel in a range."""

PD = misc.imread('drive/WIFIRE_TEST/wifire/sd-3layers.jpg')
PD[200:800, : ,1] = 255
plt.figure(figsize=(5,5))
plt.imshow(PD)

"""Pick all Pixels with Low Values"""

from scipy import misc
photo_data = misc.imread('drive/WIFIRE_TEST/wifire/sd-3layers.jpg') 
print("Shape of photo_data:", photo_data.shape)
low_value_filter = photo_data < 200 
print("Shape of low_value_filter:", low_value_filter.shape)

"""Now we'll make all values of those pixel zero whose Red value is under 150."""

PD = misc.imread('drive/WIFIRE_TEST/wifire/sd-3layers.jpg')
red_mask = PD[ : , : , 0] < 150
PD[red_mask] = 0
plt.figure(figsize=(10,10))
plt.imshow(PD)

"""Detecting Highly-GREEN Pixels"""

photo_data = misc.imread('drive/WIFIRE_TEST/wifire/sd-3layers.jpg')
green_mask   = photo_data[ : , : ,1] < 150

photo_data[green_mask] = 0
plt.figure(figsize=(10,10))
plt.imshow(photo_data)

"""Detecting all those pixels where Blue>0"""

PD = misc.imread('drive/WIFIRE_TEST/wifire/sd-3layers.jpg')
blue_mask = PD[ : , : ,2] == 0
PD[blue_mask] = 0
plt.figure(figsize=(10,10))
plt.imshow(PD)

